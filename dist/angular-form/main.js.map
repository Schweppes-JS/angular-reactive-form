{"version":3,"sources":["./src/app/visibility-checkbox/visibility-checkbox.component.ts","./src/app/visibility-checkbox/visibility-checkbox.component.html","./src/environments/environment.ts","./src/app/services/validator.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-visibility-checkbox',\n  templateUrl: './visibility-checkbox.component.html',\n  styleUrls: ['./visibility-checkbox.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => VisibilityCheckboxComponent),\n    multi: true\n  }]\n})\nexport class VisibilityCheckboxComponent implements ControlValueAccessor {\n\n  private _currentState: boolean = false;\n  private propagateChange: Function;\n  private propagateTouch: Function;\n\n  constructor() { }\n\n  writeValue(checked: boolean): void {\n    this._currentState = checked;\n  }\n\n  get currentState() {\n    return this._currentState;\n  }\n\n  set currentState(checked: boolean) {\n    this._currentState = checked;\n    this.propagateChange(checked);\n    this.propagateTouch(checked);\n  }\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.propagateTouch = fn;\n  }\n\n  public toggleVisibility() {\n    this.currentState = !this.currentState;\n  }\n}\n","<i\n  class=\"far\"\n  [ngClass]=\"{\n    'fa-eye': !currentState,\n    'fa-eye-slash': currentState\n  }\"\n  (click)=\"toggleVisibility()\"\n></i>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidatorService {\r\n  constructor() { }\r\n\r\n  emailValidator(control: AbstractControl): { [key: string]: any } | null {\r\n    const isValid = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(control.value);\r\n    if (isValid) return null;\r\n    return { 'incorrect': true };\r\n  }\r\n\r\n  passwordValidator(control: AbstractControl): { [key: string]: any } | null {\r\n    const isValid = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(control.value);\r\n    if (isValid) return null;\r\n    return { 'incorrect': true };\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, AfterContentInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ValidatorService } from './services/validator.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, AfterContentInit, OnDestroy {\r\n\r\n  private isEmailInputTouched: boolean = false;\r\n  private isEmailInputValid: boolean = false;\r\n  public isEmailIncorrect: boolean = false;\r\n  public emailLabel: string = 'Email Address';\r\n\r\n  private isPasswordInputTouched: boolean = false;\r\n  private isPasswordInputValid: boolean = false;\r\n  public isPasswordIncorrect: boolean = false;\r\n  public passwordLabel: string = 'Password';\r\n  public passwordType: string = 'password';\r\n\r\n\r\n  public isRemebered: boolean = false;\r\n\r\n  public loginInfoControl: FormGroup;\r\n\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  constructor(private validatorService: ValidatorService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginInfoControl = new FormGroup({\r\n      email: new FormControl('', [Validators.required, this.validatorService.emailValidator]),\r\n      password: new FormControl('', [Validators.required, this.validatorService.passwordValidator]),\r\n      visibilityCheckbox: new FormControl(),\r\n    });\r\n\r\n\r\n    this.subscription.add(this.loginInfoControl.controls.email.statusChanges.subscribe(status => {\r\n      if (status === 'VALID') {\r\n        this.isEmailInputValid = true;\r\n        this.isEmailIncorrect = false;\r\n        this.emailLabel = \"Email Address\";\r\n      } else {\r\n        this.isEmailInputValid = false;\r\n        this.isEmailIncorrect = true;\r\n        this.emailLabel = \"Plese, input corect part followed before and after '@'\";\r\n      }\r\n    }));\r\n\r\n    this.subscription.add(this.loginInfoControl.controls.password.statusChanges.subscribe(status => {\r\n      if (status === 'VALID') {\r\n        this.isPasswordInputValid = true;\r\n        this.isPasswordIncorrect = false;\r\n        this.passwordLabel = \"Password\";\r\n      } else {\r\n        this.isPasswordInputValid = false;\r\n        this.isPasswordIncorrect = true;\r\n        this.passwordLabel = \"Plese, include minimum eight characters, at least one letter and one number\";\r\n      }\r\n    }));\r\n\r\n    this.subscription.add(this.loginInfoControl.controls.visibilityCheckbox.valueChanges.subscribe(status => {\r\n      status ? this.passwordType = 'text' : this.passwordType = 'password';\r\n    }));\r\n  }\r\n\r\n  public onEmailBlur(): void {\r\n    this.isEmailInputTouched = true;\r\n    this.isEmailIncorrect = (this.isEmailInputTouched && !this.isEmailInputValid);\r\n    if (this.isEmailIncorrect) {\r\n      this.emailLabel = \"Plese, input corect part followed before and after '@'\";\r\n    }\r\n    else {\r\n      this.emailLabel = \"Email Address\";\r\n    }\r\n  }\r\n\r\n  public onPasswordBlur(): void {\r\n    this.isPasswordInputTouched = true;\r\n    this.isPasswordIncorrect = (this.isPasswordInputTouched && !this.isPasswordInputValid);\r\n    if (this.isPasswordIncorrect) {\r\n      this.passwordLabel = \"Plese, include minimum eight characters, at least one letter and one number\";\r\n    }\r\n    else {\r\n      this.passwordLabel = \"Password\";\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (localStorage.getItem('log')) {\r\n      const userInfo = JSON.parse(atob(localStorage.getItem('log')));\r\n      this.loginInfoControl.controls.email.setValue(userInfo.email);\r\n      this.loginInfoControl.controls.password.setValue(userInfo.password);\r\n      this.isRemebered = true;\r\n    }\r\n  }\r\n\r\n  public onSubmit(remembranceTarget: HTMLInputElement): void {\r\n    console.log(this.loginInfoControl.controls.visibilityCheckbox);\r\n\r\n    if (this.loginInfoControl.controls.password.valid && this.loginInfoControl.controls.email.valid) {\r\n      const userInfo = {\r\n        email: this.loginInfoControl.controls.email.value,\r\n        password: this.loginInfoControl.controls.password.value\r\n      }\r\n\r\n      if (remembranceTarget.checked) {\r\n        localStorage.setItem('log', btoa(JSON.stringify(userInfo)));\r\n      } else localStorage.setItem('log', '');\r\n\r\n      alert(`email: ${userInfo.email}\\npassword: ${userInfo.password}`);\r\n      document.location.reload();\r\n    }\r\n    else {\r\n      alert('Please, enter all fields correctly');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","<form  class=\"main-container__form\" [formGroup]=\"loginInfoControl\">\r\n\r\n  <label\r\n    class=\"form__label\"\r\n    for=\"email\"\r\n    [ngClass]=\"{highlighted: isEmailIncorrect}\"\r\n  >{{emailLabel}}</label>\r\n\r\n  <input\r\n    type=\"email\"\r\n    class=\"form__input\"\r\n    placeholder=\"example@address.com\"\r\n    name=\"email\"\r\n    formControlName=\"email\"\r\n    #emailInput\r\n    autocomplete=\"on\"\r\n    (blur)=\"onEmailBlur()\"\r\n  >\r\n\r\n  <label\r\n    class=\"form__label\"\r\n    for=\"password\"\r\n    [ngClass]=\"{highlighted: isPasswordIncorrect}\"\r\n  >{{passwordLabel}}</label>\r\n\r\n  <input\r\n    [type]=\"passwordType\"\r\n    class=\"form__input\"\r\n    placeholder=\"&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;\"\r\n    name=\"password\"\r\n    formControlName=\"password\"\r\n    #passwordInput\r\n    autocomplete=\"on\"\r\n    (blur)=\"onPasswordBlur()\"\r\n  >\r\n\r\n  <div class=\"form__checkbox-container\">\r\n\r\n    <input\r\n      class=\"checkbox-container__checkbox-remembrance\"\r\n      type=\"checkbox\"\r\n      checked\r\n      name=\"remembrance\"\r\n      #remembranceInput\r\n      [checked]=\"isRemebered\"\r\n    >\r\n    \r\n    <label\r\n      class=\"checkbox-container__remembrance-label\"\r\n      for=\"remembrance\"\r\n    >Remeber me</label>\r\n    \r\n    <app-visibility-checkbox\r\n      formControlName=\"visibilityCheckbox\"\r\n      class=\"checkbox-container__visibility-icon\">\r\n  </app-visibility-checkbox>\r\n  \r\n  </div>\r\n\r\n  <button\r\n    (click)=\"onSubmit(remembranceInput)\"\r\n    class=\"form__button\"\r\n  >Log in</button>\r\n  \r\n</form>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ValidatorService } from './services/validator.service';\nimport { VisibilityCheckboxComponent } from './visibility-checkbox/visibility-checkbox.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    VisibilityCheckboxComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [ValidatorService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}